// Sorting: 
//        Pre/Post Condition Issues - An investigation 
//                                      -- Stephanie McIntyre
// Based on examples in class 

// Second Attempt at specifying requirements for sorting array A in incrementing order
// We want our Hoare triple of (|Pre-Condition|) Code (|Post-Condition|) to hold iff A is properly sorted.

method sort(A: array<int>, n: int) 
modifies A; requires n==A.Length;
/* Pre-Condition */   requires n>=0;            
/* Post-Condition */  ensures forall i,j:: 0<=i<=j<n ==> A[i]<=A[j];  //This states that A is sorted.
                      ensures multiset(A[..])==multiset(old(A[..]))

//Can we write code that does not sort A that still satisfies the requirements? 
//Consider the following program:
{
  n := 1;
}
//Now it will see that our array is sorted for the first element only. YAY!

//It is important to note, that this, under our system would satisfy the Hoare triple.
//However, Dafny is like "Look buddy, we cannot modify this n!"
